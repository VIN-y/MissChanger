#####################################################################
#               tools_calibrate Configuration
#####################################################################
[tools_calibrate]
pin: PG10
travel_speed: 20             # mm to travel sideways for XY probing
spread: 7                    # mm to travel down from top for XY probing
lower_z: 1.0                 
speed: 1.5                   # The speed (in mm/sec) to move tools down onto the probe
lift_speed: 4                # The speed (in mm/sec) to retract between probes
final_lift_z: 3              # Z Lift after probing done, should be greater than any Z variance between tools
samples:5
samples_result: median       # median, average
sample_retract_dist:1
samples_tolerance:0.01       # UPDATE THIS WITH YOUR PRINTER
samples_tolerance_retries:10
trigger_to_bottom_z: 1.820   # Decrease -> higher nozzle

#####################################################################
#                        Hidden
#####################################################################
[gcode_macro _CALIBRATE_MOVE_OVER_PROBE]
gcode:
    BED_MESH_CLEAR
    G0 Z60 F9000                # UPDATE THIS WITH YOUR POSITION. Make sure that the nozzle is not touching the probe.
    G0 X241.76 Y330.28 F9000    # UPDATE THIS WITH YOUR POSITION

#####################################################################
#                        Working
#####################################################################
[gcode_macro CALIBRATE_OFFSETS]
description: Tool offsetS calibration
gcode:
    {% set tools = printer.toolchanger.tool_numbers %}
    {% set names = printer.toolchanger.tool_names %}

    {% if printer['quad_gantry_level'].applied == True and "xyz" in printer.toolhead.homed_axes %}
        # Tool 0
        SELECT_TOOL T={tools[0]}  RESTORE_AXIS=XYZ
        STOP_TOOL_PROBE_CRASH_DETECTION
        _CALIBRATE_MOVE_OVER_PROBE
        TOOL_LOCATE_SENSOR
        TOOL_CALIBRATE_PROBE_OFFSET PROBE="tool_probe T0"
    
        {% if params.TOOL != null%}
            RESPOND TYPE=echo MSG='Calibrate T{params.TOOL}...'
            SELECT_TOOL T={params.TOOL}  RESTORE_AXIS=Z
            STOP_TOOL_PROBE_CRASH_DETECTION
            _CALIBRATE_MOVE_OVER_PROBE    
            TOOL_CALIBRATE_TOOL_OFFSET
            TOOL_CALIBRATE_PROBE_OFFSET PROBE="tool_probe T{params.TOOL}"
        {% else %}
            RESPOND TYPE=echo MSG='Calibrate all tools...'
            {% for tool in tools[1:] %}
                SELECT_TOOL T={tool}  RESTORE_AXIS=Z
                STOP_TOOL_PROBE_CRASH_DETECTION
                _CALIBRATE_MOVE_OVER_PROBE
                TOOL_CALIBRATE_TOOL_OFFSET
                TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=gcode_x_offset VALUE="{% raw %}{x:0.6f}{% endraw %}"
                TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=gcode_y_offset VALUE="{% raw %}{y:0.6f}{% endraw %}"
                TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=gcode_z_offset VALUE="{% raw %}{z:0.6f}{% endraw %}"
                TOOL_CALIBRATE_PROBE_OFFSET PROBE="tool_probe T{tool}"
            {% endfor %}
        {% endif %}
        
        # Finish up
        SELECT_TOOL T={tools[0]}
        G1 Y125 F9000
        G1 X175 F9000
    {% else %}
        {% if printer['quad_gantry_level'].applied == False %}
            RESPOND TYPE=echo MSG='Gantry is not LEVELED...'
        {% endif %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            RESPOND TYPE=echo MSG='Printer is not HOMED...'
        {% endif %}
    {% endif %}
    
#--------------------------------------------------------------------
[gcode_macro CALIBRATE_NPO]
description: Nozzle probe offset calibration
gcode:
    {% if printer['quad_gantry_level'].applied == True and "xyz" in printer.toolhead.homed_axes %}
        STOP_TOOL_PROBE_CRASH_DETECTION
        _CALIBRATE_MOVE_OVER_PROBE
        TOOL_LOCATE_SENSOR
        TOOL_CALIBRATE_PROBE_OFFSET PROBE="tool_probe T{printer.toolchanger.tool_number}"
    {% else %}
        {% if printer['quad_gantry_level'].applied == False %}
            RESPOND TYPE=echo MSG='Gantry is not LEVELED...'
        {% endif %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            RESPOND TYPE=echo MSG='Printer is not HOMED...'
        {% endif %}
    {% endif %}
