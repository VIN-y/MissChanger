#--------------------------------------------------------------------
[gcode_macro _ADJUST_Z_HOME_FOR_TOOL_OFFSET]
description: Correct the physical Z endstop offset, relative to TO.
gcode:
    G90 ; absolute mode
    G0 Z10 F1000
    {% set tool = printer.toolchanger.tool %}
    {% if tool %}
        {% set tool_z_offset = printer[tool].gcode_z_offset %}
        {% set probe_z_offset = printer.tool_probe_endstop.active_tool_probe_z_offset %}
        SET_KINEMATIC_POSITION Z={10.0 + tool_z_offset|float + probe_z_offset|float}
    {% endif %}

#--------------------------------------------------------------------
[gcode_macro _APPLY_ACTIVE_TOOL_GCODE_OFFSETS]
gcode:
    ; Apply gcode offsets
    {% set tool = printer.toolchanger.tool %}
    {% if tool %}
        SET_GCODE_OFFSET  X={printer[tool].gcode_x_offset}  Y={printer[tool].gcode_y_offset}  Z={printer[tool].gcode_z_offset}
    {% endif %}

#--------------------------------------------------------------------
[gcode_macro TOOL_BED_MESH_CALIBRATE]
gcode:
    {% set tool_z_offset = printer[printer.toolchanger.tool].gcode_z_offset %}
    G90 ; absolute mode
    G0 Z10 F1000
    # Bed mesh knows about the probe offset, but not about the tool offset.
    SET_KINEMATIC_POSITION Z={10.0-tool_z_offset|float}
    BED_MESH_CALIBRATE
    G0 Z10 F1000
    SET_KINEMATIC_POSITION Z={10.0+tool_z_offset|float}

#--------------------------------------------------------------------
[gcode_macro _TAP_PROBE_ACTIVATE]
description: Ensure safe temp for bed probing
gcode:
    {% set max_temp = 150 %}
    {% set actual_temp = printer[params.HEATER].temperature %}
    {% set target_temp = printer[params.HEATER].target %}
    {% if target_temp > max_temp %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (target_temp, max_temp)) }
        SET_HEATER_TEMPERATURE HEATER={params.HEATER} TARGET={ max_temp|int - 5 }
    {% endif %}
    # Temperature target is already low enough, but nozzle may still be too hot.
    {% if actual_temp > max_temp  + 2 %}
        { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (actual_temp, max_temp)) }
        TEMPERATURE_WAIT SENSOR={params.HEATER} MAXIMUM={ max_temp }
    {% endif %}

#--------------------------------------------------------------------
[gcode_macro _INITIALIZE_FROM_DETECTED_TOOL]
gcode:
    {% if printer.tool_probe_endstop.active_tool_number | int == -1 %} 
        RESPOND TYPE=error MSG='Failed to detect active tool'
        PAUSE
    {% else %}
        INITIALIZE_TOOLCHANGER T={printer.tool_probe_endstop.active_tool_number}
        # SET_GCODE_VARIABLE MACRO=_GLOBAL_OFFSET VARIABLE=th VALUE={ printer.tool_probe_endstop.active_tool_number }
    {% endif %}

#--------------------------------------------------------------------
[gcode_macro TEST_TC_20]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                                 # Homing all axes
        QUAD_GANTRY_LEVEL
    {% endif %}
    G1 Z50 F1500
    {% for n in range(20) %}
      T{ printer.toolchanger.tool_numbers | random }
    {% endfor %}

#--------------------------------------------------------------------
[gcode_macro TEST_TC_2500]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=60
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                                 # Homing all axes
        QUAD_GANTRY_LEVEL
    {% endif %}
    G1 Z50 F1500
    {% for n in range(2500) %}
      T{ printer.toolchanger.tool_numbers | random }
    {% endfor %}

#--------------------------------------------------------------------
[gcode_macro TEST_Dock]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                                 # Homing all axes
    {% endif %}
    TEST_TOOL_DOCKING

#--------------------------------------------------------------------
[gcode_macro TEST_Dock_1250]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=60
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=100
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                                 # Homing all axes
        QUAD_GANTRY_LEVEL
    {% endif %}
    G1 Z50 F1500
    {% for n in range(1250) %}
        RESPOND TYPE=echo MSG='Tool change no: {n}'
        TEST_TOOL_DOCKING
    {% endfor %}

